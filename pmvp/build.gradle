apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}


dependencies {

    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-fragment'
        exclude module: 'support-compat'
        exclude module: 'support-core-utils'
        exclude module: 'support-core-ui'
    }
    api(rootProject.ext.dependencies["support-fragment"]){
        exclude module: 'support-core-utils'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-core-utils'
        exclude module: 'support-fragment'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api rootProject.ext.dependencies["annotations"]


    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }

    //rx系列
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }

    //network
    api rootProject.ext.dependencies["okhttp3"]
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }

    //图片加载
    api(rootProject.ext.dependencies["glide"]) {
        exclude module: 'support-v4'
        exclude module: 'support-fragment'
        exclude module: 'gifdecoder'
    }
    api(rootProject.ext.dependencies["glide-gifdecoder"]) {
        exclude module: 'support-annotations'
    }
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    //tool
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["timber"]
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["multidex"]
    testImplementation rootProject.ext.dependencies["junit"]
    compileOnly rootProject.ext.dependencies["javax.annotation"]

    //dagger
    api rootProject.ext.dependencies["dagger2"]
    api (rootProject.ext.dependencies["dagger2-android"]){
        exclude module: 'support-annotations'
        exclude module: 'dagger'
    }
    api (rootProject.ext.dependencies["dagger2-android-support"]){
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'support-fragment'
        exclude module: 'dagger'
        exclude module: 'dagger-android'
    }
    annotationProcessor  rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]

    api rootProject.ext.dependencies["fragmentation"]


    api (rootProject.ext.dependencies["permission"]){
        exclude module: 'appcompat-v7'
        exclude module: 'support-annotations'
        exclude module: 'support-fragment'
        exclude module: 'support-compat'
    }
}
apply from: 'bintray.gradle'
